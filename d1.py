# -*- coding: utf-8 -*-
"""d1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WqiSWjhaa7byF0EiRDBi8PQpEpWhWayx
"""

#print statement
a=10
b=20
res=a+b
print(res)

#is function
a=10
b=10
print(a is b)
x=True
y=True
print(x is not y)

#id statement
a="ashish"
b="ashish"
print(id(a))
print(id(b))
print(a is b)

a=123456789
print(int(a/100000000)+a%10)

#reverse no without loop
a=int(input())
sum=0
b=a%10
sum=10*sum+b
a=a//10
b=a%10
sum=10*sum+b
a=a//10
b=a%10
sum=10*sum+b
a=a//10
print(sum)

a=int(input())
b=a%10
a=a//10
b=b+a
print(b)

a=int(input())
b=a%10
a=a//10
c=a%10
a=a//10

x="hello learning python"
print('h' in x)
print('d' in x)
print('python' in x)

list1=["aman","rahul","sandeep"]
print("aman" in list1)
print("sonu" in list1)
print("sonu"  not in list1)

import math
print(math.sqrt(25))
print(math.pi)

from math import sqrt,pi
print(sqrt(16))

import math as m
print(m.sqrt(36))

a=2
res=a**9
print(res)



print("the sum:",int(input("enter first no:"))+int(input("enter second no: ")))

x=eval(input("enter values: "))
print(x)
print(type(x))

x=[234,234,234,23,432,3,4,23]
res=set(x)
print(res)

#value passing
a=10
b=20
c=30
print("b value is %d and c value is %d"%(b,c))

#replacement variable{}
name="vijay"
salary=30000
company="TCS"
print("hello {0} your salary is {1} and company is {2}".format(name,salary,company))
print("hello {x} your salary is {y} and company is {z}".format(x=name,y=salary,z=company))

#main function in python
if __name__=='__main__':
  print("aman")

#loop if you want to execute a block of statement or no of line again and again until the condition is satisfied then we should go for loop.
#for loop syntax
a=[10,20,30]
for x in a:
  print(x)

s="aman chand"
for x in s:
  print(x)

list=[12,20,30,12,40]
print(list)
for x in list:
  print(x)

list=[20,30,10,23]
for i in range(len(list)):
  print(list[i])

for x in range(10):
  print(x)

for x in range(1,11,2): #start,last,increment/decrement
  print(x)

#bytearray
x=[10,20,30,40]
b=bytearray(x)
print(type(b))
for x in b:
  print(x)
b[1]=222
for x in b:
  print(x)

sum=0
for x in range(1,11):
  sum=sum+x
print(sum)

#while loop
i=0
while i<=10:
  print(i)
  i+=1

"""if con:
  state 1
elif con:
  state2
else:
  default:"""

no=int(input("enter the no: "))
if no%2==0:
  print("even")
else:
  print("odd")

a=int(input("enter the a no: "))
b=int(input("enter the b no: "))
c=int(input("enter the c no: "))
d=int(input("enter the d no: "))
e=int(input("enter the e no: "))
m=a

if b>m:
  m=b
if c>m:
  m=c
if d>m:
  m=d
if e>m:
  m=e
print(m)

8

a=int(input("enter the a no: "))
b=int(input("enter the b no: "))
c=int(input("enter the c no: "))
d=int(input("enter the d no: "))
e=int(input("enter the e no: "))
m=a

if b<m:
  m=b
if c<m:
  m=c
if d<m:
  m=d
if e<m:
  m=e
print(m)

cp=int(input("enter the cost price: "))
s=input("are you student (yes/no): ")
if s=="yes":
  if cp>500 :
    ds=cp*0.10
  else:
    ds=cp*0.05
else:
  if cp>500:

    ds=cp*0.08
  else:
    ds=cp*0.02
td=cp-ds
print("cost price is: " ,cp)
print("total discount: " ,ds)
print("final price is: ",td)

n1=int(input("enter n1: "))
n2=int(input("enter n2: "))
n3=int(input("enter n3: "))
n4=int(input("enter n4: "))
n5=int(input("enter n5: "))
gen=input("enter gender(m/f): ")
total=n1+n2+n3+n4+n5
per=(total/500)*100
print(total)
print(per)
if per>=82 and gen=="f":
  print("she can take admission ")
elif per>=62 and gen=="m":
  print("he can take admission ")
else:
  print("cannot take admission")

#reverse no
no=int (input("enter the no: "))
rev=0;
while no>0:
  rem=no%10
  rev=rev*10+rem
  no=no//10
print(rev)

"""count the digits
sum of digits
product of digits"""

#sum of digit
no=int (input("enter the no: "))
sum=0;
while no>0:
  rem=no%10
  sum=sum+rem
  no=no//10
print(sum)

#product of digit
no=int (input("enter the no: "))
p=1;
while no>0:
  rem=no%10
  p=p*rem
  no=no//10
print(p)

#count the digits
no=int (input("enter the no: "))
c=0;
while no>0:
  rem=no%10
  c+=1
  no=no//10
print(c)

#palindrome no
no=int (input("enter the no: "))
n=no
rev=0;
while no>0:
  rem=no%10
  rev=rev*10+rem
  no=no//10
if rev==n:
   print("it is a palindrome")
else:
  print("not a palindrome")



#armstrong no
no=int(input("enter the no: "))
n=no
c=0;
while no>0:
  rem=no%10
  c+=1
  no=no//10
print(c)
sum=0
no=n
while no>0:
  rem=no%10
  sum=sum+(rem**c)
  no=no//10
if sum==n:
  print("armstrong no")
else:
  print("not armstrong")

for i in range(1,10001):
  no=i
  c=0
  n=no
  while no>0:
    rem=no%10
    c=c+1
    no=no//10
  sum=0
  no=n
  while no>0:
    rem=no%10
    sum=sum+(rem**c)
    no=no//10
  if sum==n:
    print(sum)
  else:
    continue

#fabinochi series
a=0
b=1
n=int(input("enter the n: "))
print(a,"\t",b,end="")
for i in range(2,n+1):
  s=a+b
  a=b
  b=s
  print("\t",s,end="")

#multiply without *
a=int(input("enter n1: "))
b=int(input("enter n2: "))
res=0
for x in range(b):
  res=res+a
print(res)

sum=1
n=int(input("enter the range: "))
x=int(input("enter the x: "))
for i in range(1,n+1):
  sum=sum+(x**i)/i
print(sum)

sum=1
n=int(input("enter the range: "))
x=int(input("enter the x: "))

for i in range(1,n+1):
  fact=1
  no=i
  while(no>1):

    fact=fact*no
    no=no-1
  sum=sum+(x**i)/fact
print(sum)

#Automorphic no
N=int(input("enter the no: "))
t=True
if N<0:
	  N=-N
sq=N*N
while(N>0):
	if (N%10!=sq%10):
		t=False
	N//=10
	sq//=10

if t==True:
	print("Automorphic")
else:
	print("Not Automorphic")

#peterson no
n=int(input("enter the no: "))
sum=0
no=n
while no>0:
  rem=no%10
  fact=1
  while(rem>1):
    fact=fact*rem
    rem=rem-1
  sum=sum+fact
  no=no//10
if sum==n:
  print("peterson no")
else:
  print("not peterson")

#tech no
n=int(input("enter the no with even digits: "))
s=str(n)
l=len(s)
m=l/2
ne=n%10**m
r=n//10**m
q=ne+r
a=q*q
if a==n:
  print("tech no")
else:
  print("not tech")

i=1
j=10
while i<j:
  if i==3:
    i=i+1
    j=j-1
  else:
    print(i," ",j)
    i=i+1
    j=j-1

#string handling
#find function
s="learning python is very easy"
print(s.find("python"))
print(s.find("r"))
print(s.rfind("r"))

#count function
s="abcababcabcabcdda"
print(s.count('a'))
print(s.count('ab'))
print(s.count('a',3,10))

#replace function
s="learning python is very easy"
s1=s.replace("easy","difficult")
print(s1)

#split function
s="learning python is very easy"
l=s.split()
print(l)
for x in l:
  print(x)

s="22-2-2024"
l=s.split("-")
print(l)



l=['nagpur','pune','mumbai','delhi']
s=' '.join(l)

print(s)

#startwith endswith function
s="learning python is very easy"
print(s.startswith('learning'))
print(s.endswith('learning'))

#upper and lower
s="learning python is very easy"
print(s.upper())
print(s.lower())
print(s.swapcase())
print(s.title())

#is function
print('ashish789'.isalnum())
print('ashish789'.isdigit())
print('4562789'.isdigit())
print('ABC'.isupper())
print('ABC'.islower())
print('abc'.islower())
print("learning python is easy".istitle())
print(' '.isspace())

#string reverse
s=input("enter string: ")
print(s[::-1])

#string reverse2
s=input("enter string: ")
print(' '.join(reversed(s)))





#string reverse3
s=input("enter string: ")
rev=""
for x in s:
  rev=x+rev
print(rev)

#reverse order of word
s="learning python is very esay"
s=s.split()
l=' '.join(reversed(s))
print(l)

s="learning python is very esay"
l=s.split()
l1=[]
i=0
while i<len(l):
  l1.append(l[i][::-1])
  i=i+1
  o=' '.join(l1)
print(o)

#removing duplicate
s="abcdabbcdabbbcccddeeeef"
l=[]
for x in s:
  if x not in l:
    l.append(x)
    o=''.join(l)
print(o)

#valdi no
n=input("enter the no: ")
l=len(n)

if l==10:
  if n.isdigit():
    if n.startswith('6') or n.startswith('7') or n.startswith('8') or n.startswith('9'):
      print("valid no")
    else:
      print("not valid in india")

  else:
    print("enter digit only ")

else:
  print("enter 10 digit no")

#accept email id and check weather it is valid or not
import re
n=input("enter the email")
reg= r'\b[A-Za-z0-9._%+-]+@gmail+\.com\b'
if(re.fullmatch(reg, n)):
		print("Valid Email")

else:
		print("Invalid Email")

#list data structure
#insertion order preserved
#duplicate object allowed
l=[]
print(type(l))

l=eval(input("enter the list: "))
print(l)

l=list(range(0,11,2))
print(l)

s="learning python "
l=s.split()
print(l)

s="aman"
l=list(s)
print(l)

list=[11,12,13,14,15]
print(list[0])
print(list[-1])
print(list[2])
print(list[1:3])

#traversing list
n=[0,1,2,3,4,5,6,7,8,9,10]
i=0
while i<len(n):
  print(n[i])
  i=i+1

n=[1,2,3,4,5,6,7,8,9,10]
for x in n:
  print(x)

#list functions
#1 len()
n=[10,20,30]
print(len(n))

#count function
n=[1,2,2,3,3,4,1]
print("1 occur: ",n.count(1))
print("2 occur: ",n.count(2))
print("3 occur: ",n.count(3))
print("4 occur: ",n.count(4))

#append()
l1=[]
l1.append(10)
l1.append('a')
l1.append(3.5)
print(l1)
for i in l1:
  print(l1)
for x in range(len(l1)):
  print(l1[x])

#insert() add data at specific index
n=[1,2,3,4,5]
n.insert(1,222)
print(n)
n.insert(4,999)
print(n)

#extend()
o1=[11,2,3]
o2=[13,23,12]
o1.extend(o2)
print(o1)

#remove()
n=[10,20,30,10]
n.remove(10)
print(n)
n.remove(30)
print(n)

#pop() remove and return the last element of the list
n=[10,20,30]
print(n.pop())
print(n)

#ordering in list
#reverse() and sort()
n=[10,20,30,40]
n.reverse()
print(n)
n.sort()
print(n)

#concatination(+)
a=[10,20,30,40]
b=[40,50,60]
c=a+b
print(c)
c=a*3
print(c)

#clear()
n=[10,20,30]
print(n)
n.clear()
print(n)
print(n.clear())

#nested list()
n=[10,20,[30,40],50]
print(n)
print(n[0])
print(n[2][1])

#nested list in form or matrix
n=[[10,20,30],[40,50,60],[70,80,90]]
print(n)
print('row wise:')
for r in n:
  print(r)
print('matrix style: ')
for i in range(len(n)):
  for j in range(len(n[i])):
    print(n[i][j],end=" ")
  print()

n = int(input("Enter the number of semesters: "))

    sem=[]

    for i in range(n):
        sub = int(input(f"\nEnter number of subjects in {i + 1} semester: "))
        sem.append(sub)
    for i in range(n):
        print(f"\nMarks obtained in {i + 1} semester:")
        max_mark = 0
        for _ in range(sem[i]):
            mark = int(input())
            if not (0 <= mark <= 100):
                print("\nYou have entered invalid marks.")
            max_mark = max(max_mark, mark)

        print(f"\nMaximum mark in {i + 1} semester: {max_mark}")

#arr=[10,20,30,4]
arr=[]
n=int(input("enter no of ele: "))
for i in range(0,n):
  e=int(input())
  arr.append(e)
max=arr[0]
for x in range(len(arr)):
  if max<arr[x]:
    max=arr[x]
print(max)



n=int(input("enter the no of ele: "))
arr=[]
for i in range(0,n):
  l=int(input())
  arr.append(l)
result = []

for i in range(len(arr)):
    next_element = -1
    for j in range(i + 1, n):
        if arr[j] > arr[i]:
            next_element = arr[j]
            break
    result.append(next_element)

print(result)

s="aaabbbbeeeeffggg"
s1=""
a1=s[0]
c=1
for i in range(1,len(s)):
  if s[i]==s[i-1]:
    c+=1
  else:
    s1+=s[i-1]+str(c)
    c=1
s1+=s[-1]+str(c)
print(s1)

#anagram string
s1=input("enter string s1: ")
s2=input("enter string s2: ")
s1.lower()
s2.lower()
res1=sorted(s1)
res2=sorted(s2)
if res1==res2:
  print("yes the strings are anagrams")

else:
  print("no strings are not anagrams")

#tuple
t=()
print(t)
t=(10)
print(t)
t=(1,2,3,4)
print(t)

t=(10,20,30,40,50)
print(t.index(10))
print(t.index(50))

t=(40,20,30,10)
t1=sorted(t)
print(t1)
print(t)

#min and max function
t=(40,20,10,50)
print(min(t))
print(max(t))

#cmp
import operator
t1=(10,20,30)
t2=(40,50,60)
t3=(10,20,30)
print(operator.eq(t1,t2))
print(operator.eq(t1,t3))
print(operator.eq(t2,t3))

t=eval(input("enter tuple of no: "))
l=len(t)
sum=0
pr=1
for x in t:
  sum=sum+x
  pr=pr*x
print(sum)
print(pr)

#cmp
from operator import*
t1=(10,20,30)
t2=(40,50,60)
t3=(10,20,30)
print(eq(t1,t2))
print(eq(t1,t3))
print(eq(t2,t3))

s={10,20,30}
print(s)

l=[10,20,10,30,20]
s=set(l)
print(s)
print(type(s))
l=list(s)
print(l)
print(type(l))

s=set(range(5))
print(s)

#add
s={10,20,30}
s.add(40);
print(s)

#copy
s={10,20,30,40}
s1=s.copy()
print(s1)

#pop()
s={40,10,20,30}
print(s.pop())
print(s)

#remove(x)
s={10,20,30,40}
s.remove(20)
print(s)

#clear
s={10,20,30,40}
print(s)
s.clear()
print(s)

#dictionary
#d={} or d=dict()
d={}
d[100]="aman"
d[200]="prashant"
print(d)

d={100:'aman',200:'prashant'}
print(d)
print(d[100])
print(d[200])

rec={}
n=int(input("enter the no of student: "))
i=1
while i<=n:
  name=input("enter the name: ")
  marks=input("enter % of the marks: ")
  rec[name]=marks
  i=i+1
print(rec)
print("name of student","\t","% of marks")
print("------------------------------------")
for x in rec:
  print("\t",x,"\t\t",rec[x])

d={100:'aman',200:"ash",300:'yash'}
print(d)
d[100]="john"
print(d)
d[400]="raj"
print(d)

d={100:'aman',200:"ash",300:'yash'}
print(d)
d[100]="john"
print(d)
d[400]="raj"
print(d)
del d[400]
print(d)

d={100:'aman',200:"ash",300:'yash'}
print(d.get(100))
print(d.get(400))
print(d.get(100,"guest"))
print(d.get(400,"guest"))

d={100:'aman',200:"ash",300:'yash'}
print(d.keys())
for k in d.keys():
  print(k)

d={100:'aman',200:"ash",300:'yash'}
print(d.values())
for k in d.values():
  print(k)

d={100:'aman',200:"ash",300:'yash'}
for k,v in d.items():
  print(k,"-->",v)

d={}
n=int(input("enter the no of items: "))
i=1
sum=0
while i<=n:
  item=int(input("enter the item no: "))
  price=int(input("enter the price: "))
  d[item]=price
  i=i+1
for i in d.values():
  sum+=i
print(sum)

#function
def add(a,b):
  a=10
  b=20
  res=a+b
  print(res)

add(10,20)

#function
def add(a,b):
  res=a+b
  return res

res=print(add(10,20))

#function
def arth(a,b):
  res1=a+b
  res2=a-b
  res3=a*b
  res4=a//b
  return res1,res2,res3,res4

a=int(input("enter a no: "))
b=int(input("enter b no: "))
r1,r2,r3,r4=arth(a,b)
print("add: ",r1)
print("sub: ",r2)
print("mul: ",r3)
print("div: ",r4)

#variable length argument
def show(*n):
  print(n)
  sum=0
  for x in n:
    sum=sum+x
  print("sum ",sum)

show(3,4,5)
show(10,20)

#variable
#gloabal variable
a=20
def f1():
  b=10 #local variable
  print(a)
  print(b)
def f2():
  print(a)

f1()
f2()

#lambda function
#lambda argument_list:expression
s=lambda n:n*n
print(s(4))
print(s(5))

s=lambda a,b:a+b
a=10
b=20
sum=s(a,b)
print(sum)

s=lambda a,b:a if a>b else b
print(s(55,9))

